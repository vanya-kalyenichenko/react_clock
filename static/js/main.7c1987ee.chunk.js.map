{"version":3,"sources":["Compomemts/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerClock","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","toUTCString","slice","React","Component","getRandomName","value","now","toString","App","hasClock","timerId","document","addEventListener","prevState","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6NAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,WAAa,EALf,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,KAAK,EAAKT,MAAMC,QACvB,OAbP,gCAgBE,SAAmBS,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAnBzE,kCAuBE,WACEN,OAAOS,cAAcV,KAAKD,cAxB9B,oBA2BE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAV,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGd,EAAKe,cAAcC,OAAO,IAAK,YAxC1C,GAA2BC,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAQX,IAAMG,EAAb,4MACExB,MAAe,CACbW,UAAW,UACXc,UAAU,GAHd,EAMEC,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBtB,KAAKsB,QAAUrB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWS,QAC1B,MAEHO,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,UAAS,SAAAsB,GAAS,kCAClBA,GADkB,IAErBJ,UAAU,UAIdE,SAASC,iBAAiB,eAAe,SAACE,GACxCA,EAAMC,iBAEN,EAAKxB,SAAS,CAAEkB,UAAU,SAvBhC,kCA2BE,WACEpB,OAAOS,cAAcV,KAAKsB,WA5B9B,oBA+BE,WACE,MAAgCtB,KAAKJ,MAA7ByB,EAAR,EAAQA,SAAUd,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAECU,GAAY,cAAC,EAAD,CAAOd,UAAWA,WAtCvC,GAAyBO,IAAMC,WCZ/Ba,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.7c1987ee.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    time: new Date(),\n  };\n\n  timerClock = 0;\n\n  componentDidMount(): void {\n    this.timerClock = window.setInterval(() => {\n      this.setState({ time: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerClock);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Compomemts/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', () => {\n      this.setState(prevState => ({\n        ...prevState,\n        hasClock: true,\n      }));\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}